name: specurative-plan
on:
 pull_request:
    branches:
      - main
jobs:
  specurative-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Import TFC API Token from Vault
        id: tfc_secrets
        uses: hashicorp/vault-action@v2.3.1
        with:
          url: https://vault-cluster.vault.fb180883-fc88-4186-a68d-22878810dae2.aws.hashicorp.cloud:8200
          token: ${{ secrets.VAULT_TOKEN }}
          exportToken: ${{ secrets.VAULT_TOKEN }}
          namespace: admin
          secrets: |
            tfc/creds/ci-user token | TFC_TOKEN ;
      - name: Terraform Test
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt install -y terraform
          terraform -version
          ls -ltr
          terraform fmt -diff=true
          terraform init
          terraform validate
      - name: Import Azure Secrets from Vault
        id: azure_secrets
        uses: hashicorp/vault-action@v2.3.1
        with:
          url: https://vault-cluster.vault.fb180883-fc88-4186-a68d-22878810dae2.aws.hashicorp.cloud:8200
          token: ${{ secrets.VAULT_TOKEN }}
          exportToken: ${{ secrets.VAULT_TOKEN }}
          namespace: admin
          secrets: |
            azure/creds/contributor client_id | ARM_CLIENT_ID ;
            azure/creds/contributor client_secret | ARM_CLIENT_SECRET ;
            secret/data/azure/environment subscription_id | ARM_SUBSCRIPTION_ID;
            secret/data/azure/environment tenant_id | ARM_TENANT_ID ;
      - name: Set TFC Environmet Variables
        env:
          WS_ID: ${{secrets.WS_ID}} 
        run: |
          cd tf-tfc
          ls -ltr
          terraform init
          export TFE_TOKEN=${TFC_TOKEN}
          export TF_VAR_workspace_id=${WS_ID}
          export TF_VAR_arm_client_id=${ARM_CLIENT_ID}
          export TF_VAR_arm_client_secret=${ARM_CLIENT_SECRET}
          export TF_VAR_arm_tenant_id=${ARM_TENANT_ID}
          export TF_VAR_arm_sub_id=${ARM_SUBSCRIPTION_ID}
          terraform apply -auto-approve
      - name: Make TFC
        env:
          WS_ID: ${{secrets.WS_ID}}
          COMMENT: ${{github.event.inputs.comment}}
          BRANCH: ${{github.ref}}
          COMMIT_SHA: ${{github.sha}}
        run: |
          cat << EOF > main.tf
          terraform {
            backend "remote" {
              organization = "tkaburagi"

              workspaces {
                name = "azure-vault-gh-actions"
              }
            }
          }
          provider "azurerm" {
              features {}
          }
          EOF

          cat main.tf
          ls -ltrR
          tar -zcvf tf.tar.gz -C . main.tf output.tf variables.tf azure.tf
          echo '{"data":{"type":"configuration-versions","attributes":{"auto-queue-runs":false,"speculative":true}}}' > ./create_config_version.json
          curl \
            --header "Authorization: Bearer ${TFC_TOKEN}" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data @create_config_version.json \
            https://app.terraform.io/api/v2/workspaces/${WS_ID}/configuration-versions > output.json
          export UPLOAD_URL=$(cat output.json | jq -r '.data.attributes."upload-url"')
          export CV_ID=$(cat output.json | jq -r '.data."id"')
          curl \
            --header "Content-Type: application/octet-stream" \
            --request PUT \
            --data-binary @tf.tar.gz \
            $UPLOAD_URL
          rm ./create_config_version.json
          rm ./tf.tar.gz

          echo ${COMMIT_SHA}

          export COMMIT_SHA_SHORT=$(echo ${COMMIT_SHA} | cut -c 1-8)

          echo ${COMMIT_SHA_SHORT}

          cat << EOF > payload.json
          {
            "data": {
              "attributes": {
                "message": "Specurative Plan - ${BRANCH}:${COMMIT_SHA_SHORT}:${COMMENT}"
              },
              "type":"runs",
              "relationships": {
                "workspace": {
                  "data": {
                    "type": "workspaces",
                    "id": "${WS_ID}"
                  }
                },
                "configuration-version": {
                  "data": {
                    "type": "configuration-versions",
                    "id": "${CV_ID}"
                  }
                }
              }
            }
          }
          EOF

          curl \
            --header "Authorization: Bearer ${TFC_TOKEN}" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data @payload.json \
            https://app.terraform.io/api/v2/runs | jq
      - name: Cleanup Environmet
        run: |
          whoami